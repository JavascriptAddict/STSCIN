# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from . import estate_pb2 as estate__pb2

GRPC_GENERATED_VERSION = '1.67.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in estate_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class EstateStub(object):
    """The Estate service definition.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetAllEstate = channel.unary_unary(
                '/Estate.Estate/GetAllEstate',
                request_serializer=estate__pb2.EstateData.SerializeToString,
                response_deserializer=estate__pb2.EstateList.FromString,
                _registered_method=True)
        self.GetFilteredEstate = channel.unary_unary(
                '/Estate.Estate/GetFilteredEstate',
                request_serializer=estate__pb2.EstateFilter.SerializeToString,
                response_deserializer=estate__pb2.EstateList.FromString,
                _registered_method=True)
        self.CreateEstate = channel.unary_unary(
                '/Estate.Estate/CreateEstate',
                request_serializer=estate__pb2.EstateData.SerializeToString,
                response_deserializer=estate__pb2.EstateData.FromString,
                _registered_method=True)
        self.UpdateEstate = channel.unary_unary(
                '/Estate.Estate/UpdateEstate',
                request_serializer=estate__pb2.EstateData.SerializeToString,
                response_deserializer=estate__pb2.EstateData.FromString,
                _registered_method=True)


class EstateServicer(object):
    """The Estate service definition.
    """

    def GetAllEstate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFilteredEstate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateEstate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateEstate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_EstateServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetAllEstate': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllEstate,
                    request_deserializer=estate__pb2.EstateData.FromString,
                    response_serializer=estate__pb2.EstateList.SerializeToString,
            ),
            'GetFilteredEstate': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFilteredEstate,
                    request_deserializer=estate__pb2.EstateFilter.FromString,
                    response_serializer=estate__pb2.EstateList.SerializeToString,
            ),
            'CreateEstate': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateEstate,
                    request_deserializer=estate__pb2.EstateData.FromString,
                    response_serializer=estate__pb2.EstateData.SerializeToString,
            ),
            'UpdateEstate': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateEstate,
                    request_deserializer=estate__pb2.EstateData.FromString,
                    response_serializer=estate__pb2.EstateData.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Estate.Estate', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('Estate.Estate', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Estate(object):
    """The Estate service definition.
    """

    @staticmethod
    def GetAllEstate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Estate.Estate/GetAllEstate',
            estate__pb2.EstateData.SerializeToString,
            estate__pb2.EstateList.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetFilteredEstate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Estate.Estate/GetFilteredEstate',
            estate__pb2.EstateFilter.SerializeToString,
            estate__pb2.EstateList.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateEstate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Estate.Estate/CreateEstate',
            estate__pb2.EstateData.SerializeToString,
            estate__pb2.EstateData.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateEstate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/Estate.Estate/UpdateEstate',
            estate__pb2.EstateData.SerializeToString,
            estate__pb2.EstateData.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
